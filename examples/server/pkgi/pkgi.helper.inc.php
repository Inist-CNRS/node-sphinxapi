<?php

/**
 * Used to track other files generated by templates
 */
function pkgi_track_instance($path)
{
    $pkgi_root_path = realpath(getenv('APPNAME_HOME'));
    $pkgi_md5_path  = realpath(getenv('APPNAME_HOME').'/.pkgi/lastmd5');
    
    $path      = preg_replace('/^'.preg_quote($pkgi_root_path,'/').'/', '', $path);
    $t_dst     = $pkgi_root_path.$path;
    $t_dst_md5 = $pkgi_md5_path.$path;

    if (is_link($t_dst)) {
        // enregistre les liens symboliques
        @unlink($t_dst_md5);
        @mkdir(dirname($t_dst_md5), 0777, true);
        symlink(readlink($t_dst), $t_dst_md5);
    } else if (is_dir($t_dst)) {
        // enregistre les répertoires
        @mkdir($t_dst_md5, 0777, true);
    } else if (is_file($t_dst)) {
        // enregistre les simples fichiers
        $f_md5 = md5(file_get_contents($t_dst));
        @unlink($t_dst_md5);
        @mkdir(dirname($t_dst_md5), 0777, true);
        file_put_contents($t_dst_md5, $f_md5);
    }
}

function pkgi_optimization_profils()
{
    // parse la listes des optimisations dans $optim_by_module
    $modules = explode(',',getenv('PKGI_MODULES_LIST'));
    $optim   = explode(',',getenv('APPNAME_OPTIMIZATION'));
    $optim_by_module = array();
    foreach($optim as $o) {
        $for_one_module = false;
        foreach($modules as $m) {
            if (preg_match('/^'.$m.'-(.*)$/', $o, $matches)) {
                $optim_by_module[$m][] = $matches[1];
                $for_one_module = true;
                break;
            }
        }
        if (!$for_one_module) {
            foreach($modules as $m) {
                $optim_by_module[$m][] = $o;
            }
        }
    }
    return $optim_by_module;
}


function pkgi_return_free_port($default = null)
{
    if ($default && trim(getenv('APPNAME_USER')) == 'root') {
        return (integer)$default;
    }
    do {
        $port = rand(1024,65535);
    } while(@fsockopen('localhost', $port, $errno, $errstr, 1) !== FALSE);
    return $port;
}